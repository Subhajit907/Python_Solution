Given an integer array nums, move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Note that you must do this in-place without making a copy of the array.

Example 1:
Input: nums = [0,1,0,3,12]
Output: [1,3,12,0,0]

Example 2:
Input: nums = [0]
Output: [0]

Constraints:
a. 1 <= nums.length <= 10^4
b. -2^31 <= nums[i] <= 2^31 - 1

Solu:

def moveZeroes(nums):
    j = 0  # Pointer for non-zero elements

    # Move non-zero elements to the front
    for i in range(len(nums)):
        if nums[i] != 0:
            nums[j] = nums[i]
            j += 1

    # Set remaining elements to zero
    for i in range(j, len(nums)):
        nums[i] = 0

    return nums


Now, let's test the function with the given examples: 

nums1 = [0, 1, 0, 3, 12]
print(moveZeroes(nums1))  # Output: [1, 3, 12, 0, 0]

nums2 = [0]
print(moveZeroes(nums2))  # Output: [0]
